// -*- mode: groovy -*-

// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Jenkins pipeline
// See documents at https://jenkins.io/doc/book/pipeline/jenkinsfile/

// timeout in minutes
max_time = 120

node('restricted-mxnetlinux-cpu') {
  // Loading the utilities requires a node context unfortunately
  checkout scm
  utils = load('ci/Jenkinsfile_utils.groovy')
}
utils.assign_node_labels(linux_cpu: 'restricted-mxnetlinux-cpu', linux_gpu: 'restricted-mxnetlinux-gpu', linux_gpu_p3: 'restricted-mxnetlinux-gpu-p3', windows_cpu: 'restricted-mxnetwindows-cpu', windows_gpu: 'restricted-mxnetwindows-gpu')

utils.main_wrapper(
core_logic: {
  stage('Deploy Nightly Maven') {
    environment {
      MVN_DEPLOY_USER = credentials('mvn-deploy-user')
      MVN_DEPLOY_PASSWORD = credentials('mvn-deploy-password')
      MVN_DEPLOY_PASSPHRASE = credentials('mvn-deploy-passphrase')
      MVN_DEPLOY_MASTERPASS = credentials('mvn-deploy-masterpass')
      MVN_DEPLOY_GPG_KEY = credentials('mvn-deploy-gpg-key')
    }
    parallel 'linux-cpu': {
      node(NODE_LINUX_CPU) {
        ws('workspace/linux-cpu') {
          environment {
            MVN_DEPLOY_OS_TYPE = linux-x86_64-cpu
          }
          utils.init_git()
          timeout(time: max_time, unit: 'MINUTES') {
              sh "ci/build.py -p ubuntu_cpu --docker-registry ${env.DOCKER_CACHE_REGISTRY} --docker-build-retries 3 /work/runtime_functions.sh deploy_nightly_maven"
          }
        }
      }
    },
    'linux-gpu': {
      node(NODE_LINUX_CPU) {
        ws('workspace/linux-gpu') {
          environment {
            MVN_DEPLOY_OS_TYPE = linux-x86_64-gpu
          }
          utils.init_git()
          timeout(time: max_time, unit: 'MINUTES') {
              sh "ci/build.py -p ubuntu_cpu --docker-registry ${env.DOCKER_CACHE_REGISTRY} --docker-build-retries 3 /work/runtime_functions.sh deploy_nightly_maven"
          }
        }
      }
    }
  }
}
,
failure_handler: {
  if (currentBuild.result == "FAILURE") {
    emailext body: 'Generating the nightly maven has failed. Please view the build at ${BUILD_URL}', replyTo: '${EMAIL}', subject: '[NIGHTLY MAVEN FAILED] Build ${BUILD_NUMBER}', to: '${EMAIL}'
  }
}
)
